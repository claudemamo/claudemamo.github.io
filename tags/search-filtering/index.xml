<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Search Filtering on On Code &amp; Design</title>
    <link>https://www.oncodesign.io/tags/search-filtering/</link>
    <description>Recent content in Search Filtering on On Code &amp; Design</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 24 Jul 2013 12:59:00 +0000</lastBuildDate>
    <atom:link href="https://www.oncodesign.io/tags/search-filtering/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>The Rails Way to Search Filtering</title>
      <link>https://www.oncodesign.io/2013/07/24/the-rails-way-to-search-filtering/</link>
      <pubDate>Wed, 24 Jul 2013 12:59:00 +0000</pubDate>
      
      <guid>https://www.oncodesign.io/2013/07/24/the-rails-way-to-search-filtering/</guid>
      <description>&lt;p&gt;It&amp;rsquo;s been a while since my last post. Numerous changes took place in my professional life since then. I decided to take a break from my career and focus my energy to learning new technologies outside my area of expertise. One biggie is &lt;a href=&#34;http://rubyonrails.org/&#34; rel=&#34;nofollow&#34; target=&#34;_blank&#34;&gt;Ruby on Rails&lt;/a&gt;&amp;nbsp;3.&lt;br /&gt;&lt;br /&gt;To test my RoR as well as my UI skills, I created&amp;nbsp;&lt;a href=&#34;http://www.evplore.com/&#34; target=&#34;_blank&#34;&gt;evplore.com&lt;/a&gt;: a website for sharing, discovering and creating events. A requirement for evplore is to allow users to filter events by country, locality, tag, or date as shown below:&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://2.bp.blogspot.com/-W0wPU-qx8BQ/Ue6pRLSZDoI/AAAAAAAAAF8/hs7qO3SM1Ic/s1600/search-filters.png&#34; imageanchor=&#34;1&#34; style=&#34;clear: left; float: left; margin-bottom: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://2.bp.blogspot.com/-W0wPU-qx8BQ/Ue6pRLSZDoI/AAAAAAAAAF8/hs7qO3SM1Ic/s640/search-filters.png&#34; height=&#34;436&#34; width=&#34;640&#34; /&gt;&lt;/a&gt;&lt;/div&gt;Before delving into the nitty-gritty of implementing search filtering, let&amp;rsquo;s have a glance at the &lt;i&gt;EventsController&lt;/i&gt;:&lt;br /&gt;&lt;br /&gt;&lt;script src=&#34;https://gist.github.com/claudemamo/6060780.js?file=events_controller.rb&#34;&gt;&lt;/script&gt;The controller&amp;nbsp;does what you might expect: it invokes the &lt;i&gt;Event&lt;/i&gt; model&amp;rsquo;s &lt;i&gt;find&lt;/i&gt; method to retrieve the events that match the user&amp;rsquo;s search criteria.&lt;br /&gt;&lt;br /&gt;Here&amp;rsquo;s a dirty way of implementing the &lt;i&gt;find&lt;/i&gt; method inside the &lt;i&gt;Event&lt;/i&gt;&amp;nbsp;model:&lt;br /&gt;&lt;br /&gt;&lt;script src=&#34;https://gist.github.com/claudemamo/6060780.js?file=event.rb&#34;&gt;&lt;/script&gt;Any programmer worth his salt will note that this solution is tough to maintain. The&amp;nbsp;&lt;i&gt;find&lt;/i&gt;&amp;nbsp;method has a branch for every possible way the user can apply search filters&amp;nbsp;(in all 2^n branches). Having more than a few filters causes an explosion in the number of&amp;nbsp;&lt;i&gt;elsif&lt;/i&gt;&amp;nbsp;branches.&lt;br /&gt;&lt;br /&gt;The Rails way to solving this problem is to use &lt;b&gt;query chaining&lt;/b&gt;&amp;nbsp;along with the &lt;i&gt;scoped&lt;/i&gt; method:&lt;br /&gt;&lt;br /&gt;&lt;script src=&#34;https://gist.github.com/claudemamo/6060780.js?file=event(2).rb&#34;&gt;&lt;/script&gt;The &lt;i&gt;Event&lt;/i&gt; model now avoids issuing a different query for each way search filters are applied. Instead, every query corresponding to a filter is put in its own class method. All methods do the same thing more or less. For example, &lt;i&gt;in_country&lt;/i&gt; takes as a parameter the country submitted by the user. If the parameter is&amp;nbsp;&lt;i&gt;nil&lt;/i&gt;&amp;nbsp;or blank, this means the user did not submit a country filter so the method should skip the query and return the relation as is: this is what the&amp;nbsp;&lt;i&gt;scoped&lt;/i&gt;&amp;nbsp;method is for. Otherwise, the filter query is applied on the current relation and the new relation is returned.&lt;br /&gt;&lt;br /&gt;What&amp;rsquo;s left is for the &lt;i&gt;EventsController &lt;/i&gt;to chain together the query methods&amp;nbsp;so that the result of each query is passed on to the next query method for further filtering:&lt;br /&gt;&lt;br /&gt;&lt;script src=&#34;https://gist.github.com/claudemamo/6060780.js?file=events_controller(2).rb&#34;&gt;&lt;/script&gt;The complete code for this demo is available on &lt;a href=&#34;https://github.com/claudemamo/search-filters&#34; target=&#34;_blank&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>